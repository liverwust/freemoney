# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-02-07 21:23
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AdditionalRemarksResponse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('remark_type', models.SlugField()),
                ('remark_content', models.TextField(verbose_name='additional remarks')),
            ],
        ),
        migrations.CreateModel(
            name='ApplicantResponse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submitted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('due_at', models.DateTimeField()),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='full name')),
                ('address', models.TextField(blank=True, verbose_name='permanent mailing address')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, help_text='Cell phone is acceptable', max_length=128, verbose_name='primary phone number')),
                ('psu_email', models.EmailField(blank=True, help_text='This is your psu.edu e-mail', max_length=254, validators=[django.core.validators.RegexValidator('^(?:[^@]+@psu.edu)?$')], verbose_name='university e-mail address')),
                ('preferred_email', models.EmailField(blank=True, max_length=254, verbose_name='preferred e-mail address')),
                ('psu_id', models.CharField(blank=True, help_text='Nine digits: 9xxxxxxxx', max_length=9, validators=[django.core.validators.RegexValidator('^(?:9\\d{8})?$')], verbose_name='university ID number')),
                ('date_initiated', models.DateField(blank=True, null=True, verbose_name='date of initiation')),
                ('date_graduating', models.DateField(blank=True, null=True, verbose_name='planned graduation date')),
                ('cumulative_gpa', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True, verbose_name='cumulative GPA')),
                ('semester_gpa', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True, verbose_name='last semester GPA')),
                ('in_state_tuition', models.NullBooleanField(help_text='Do you pay the reduced tuition rate for PA residents?', verbose_name='in-state tuition')),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EssayPrompt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('persistent_tag', models.SlugField(blank=True)),
                ('created_at', models.DateTimeField()),
                ('prompt', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EssayResponse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('prompt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fm_apply.EssayPrompt')),
                ('response', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fm_apply.ApplicantResponse')),
            ],
        ),
        migrations.CreateModel(
            name='FinancialAidRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aid_type', models.CharField(blank=True, max_length=50, verbose_name='type')),
                ('source', models.CharField(blank=True, help_text='Full name of the fund, organization, sponsor, etc.', max_length=255, verbose_name='source')),
                ('amount_per_year', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('response', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fm_apply.ApplicantResponse')),
            ],
        ),
        migrations.CreateModel(
            name='PeerFeedbackResponse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('peer_name', models.CharField(max_length=255)),
                ('feedback', models.TextField()),
                ('peer_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ScholarshipAwardPrompt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('persistent_tag', models.SlugField(blank=True)),
                ('created_at', models.DateTimeField()),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('applicantresponse_set', models.ManyToManyField(to='fm_apply.ApplicantResponse')),
                ('previous_version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='fm_apply.ScholarshipAwardPrompt')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='essayprompt',
            name='applicantresponse_set',
            field=models.ManyToManyField(through='fm_apply.EssayResponse', to='fm_apply.ApplicantResponse'),
        ),
        migrations.AddField(
            model_name='essayprompt',
            name='previous_version',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='fm_apply.EssayPrompt'),
        ),
        migrations.AddField(
            model_name='additionalremarksresponse',
            name='response',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fm_apply.ApplicantResponse'),
        ),
    ]
